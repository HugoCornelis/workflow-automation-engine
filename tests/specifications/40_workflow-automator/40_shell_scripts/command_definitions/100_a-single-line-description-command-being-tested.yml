---
command: '# <the command with its single space seperated arguments to be tested>'
command_tests:
  - comment: |+
      This type of comment element can be inserted at any level in the YAML files that define tests.
      
      The command tests defines an array of tests that must be executed against the command.
      
      Possible keywords are:
      
      application_output_file: The pathname of a file that will be produced by the test.
      description: A single line description: of the executed test.
      disable: Gives the reason why this command test is disabled.
      error: Gives the reason why this command test will always fail.
      expected_output_file: The pathname of a file with the contents that is expected.
      read: The expected output on STDOUT of the command.  This can be a regular expression (take a look at the examples).
      tag: An array of tags associated with this command test.  These are matched with the tags given on the command line.
      tester: A shell command that will be run after the command has produced output (likely to be combined with a wait keyword for reliability and reproducibility).
      timeout: An optional timeout after which the test will fail if the expected output is not seen yet.
      wait: An optional number of seconds to wait before attempting to read from STDIN of the command.
      white_space: If this has the value 'convert seen 0a to 0d 0a newlines', that is what it will do.  This is used when running the tests inside a Docker container.
      write: An optional string to write to STDIN of the command, where the command is then expected to produce the expected output.
      
      
      Note that more keywords have been defined, including for running C and perl code.  They are currently not documented.

    description: '<a single line description of the specific test, it can be a question that asks what is tested>'
    read: '<the output that is expected from running the test>'
  - description: '<a single line description of the specific test, it can be a question that asks what is tested>'
    read: "<a string that is expected from running the test after writing to STDOUT what is specified with the 'write' keyword>"
    write: '<a string that must be written to STDIN>'
comment: |+
  This type of comment element can be inserted at any level in the YAML files that define tests.
  
  For a concise example, see the second command definition that was generated with this one.
  
  The tests are defined with arrays of command definitions that each can have an array of command tests.
  
  Recognized key words at the level of the command definitions are (in alphabetical order):
  
  class: The name of a perl class that will execute the tests.
  command: The command the must be tested, with space seperated arguments and options.
  command_tests: An array of the tests executed against the command.
  disable: Gives the reason why this test command is disabled.
  description: A single line description of all the tests for the given command.
  error: Gives the reason why this test command will always fail.
  numerical_compare: Allow small arithmetic differences during the comparison of the expected result with the produced result.
  tag: An array of tags associated with this command.  These are matched with the tags given on the command line.

description: '<a single line description of the command being tested>'
