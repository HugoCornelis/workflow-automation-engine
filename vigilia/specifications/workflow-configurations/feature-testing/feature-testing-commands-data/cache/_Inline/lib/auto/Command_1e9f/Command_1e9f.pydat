namespace : %
    classes : %
    functions : @
        _load_json_configuration_file
        assign_api_functions
        more_python_python_command
        more_python_python_command_completions
        more_python_python_command_help
filtered : <<EOV



import json

global_technical_project_configuration_path = '/home/hugo/projects/workflow-automation-engine/source/snapshots/master/vigilia/specifications/workflow-configurations/feature-testing/feature-testing-configuration-data/cache/configuration.json'

global_technical_project_configuration = None

def _load_json_configuration_file(filepath):
    global global_technical_project_configuration
    with open(filepath, 'r', encoding='utf-8') as f:
        global_technical_project_configuration = json.load(f)
    # print_to_stdout('Configuration loaded')
    # print_to_stderr('Configuration loaded')

_load_json_configuration_file(global_technical_project_configuration_path)


execute_command = None
execute_command_array = None
execute_command_schedule = None
execute_command_schedule_array = None
print_to_stdout = None
print_to_stderr = None

def assign_api_functions(exe_command, exe_command_array, exe_command_schedule, exe_command_schedule_array, ref_print_to_stdout, ref_print_to_stderr):
    global execute_command
    global execute_command_array
    global execute_command_schedule
    global execute_command_schedule_array
    global print_to_stdout
    global print_to_stderr
    execute_command = exe_command
    execute_command_array = exe_command_array
    execute_command_schedule = exe_command_schedule
    execute_command_schedule_array = exe_command_schedule_array
    print_to_stdout = ref_print_to_stdout
    print_to_stderr = ref_print_to_stderr



#!/usr/bin/python3

def more_python_python_command(argv):
    command = "echo 'python_command from bash (1)'"
    execute_command(command)
    command_array = [
        "echo 'python_command from bash (2)'",
        "echo 'python_command from bash (3)'"
    ]
    execute_command_array(command_array)


def more_python_python_command_completions(command, argv):
    completions_hash = {
           "1._<your_completion_without_spaces_here>": "explain_the_purpose_of_the_completion_here",
           "2._<another_completion_here>": "the_numbers_preserve_the_order_for_this_example",
           "3._Don't_use_spaces_in_your_completions,_because_they_confuse_bash": "further_explanation",
           "4._Look_at_the_completion_function_of_more_python_single_command_completions_to_understand_how_it_works": "further_explanation",
          }

    return completions_hash


def more_python_python_command_help(command, perl_argv):
    return f"python_python_command {command} help page"


EOV
